{"ast":null,"code":"var _jsxFileName = \"/Users/michaeltharratt/repos/toy-robot-challenge/src/components/Board.jsx\";\nimport Cell from \"./Cell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board(_ref) {\n  let {\n    grid,\n    robot\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board\",\n    children: [...grid].reverse().map((row, index1) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((cell, index2) => /*#__PURE__*/_jsxDEV(Cell, {\n        robot: robot.location[0] == index1 && robot.location[1] == index2 ? true : false\n      }, `${index1}, ${index2}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 15\n      }, this))\n    }, index1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Cell","jsxDEV","_jsxDEV","Board","_ref","grid","robot","className","children","reverse","map","row","index1","cell","index2","location","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaeltharratt/repos/toy-robot-challenge/src/components/Board.jsx"],"sourcesContent":["import Cell from \"./Cell\"\n\nexport default function Board({ grid, robot }) {\n  return (\n    <div className=\"Board\">\n       { [...grid].reverse().map((row, index1) => (\n          <div className=\"row\" key={index1}>\n              {row.map((cell, index2) => (\n              <Cell \n                key={`${index1}, ${index2}`} \n                robot={robot.location[0] == index1 && robot.location[1] == index2 ? true : false} \n              /> \n              ))}\n          </div> \n        ))}\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAkB;EAAA,IAAjB;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC3C,oBACEF,OAAA;IAAKK,SAAS,EAAC,OAAO;IAAAC,QAAA,EACjB,CAAC,GAAGH,IAAI,CAAC,CAACI,OAAO,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,MAAM,kBACnCV,OAAA;MAAKK,SAAS,EAAC,KAAK;MAAAC,QAAA,EACfG,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,MAAM,kBACtBZ,OAAA,CAACF,IAAI;QAEHM,KAAK,EAAEA,KAAK,CAACS,QAAQ,CAAC,CAAC,CAAC,IAAIH,MAAM,IAAIN,KAAK,CAACS,QAAQ,CAAC,CAAC,CAAC,IAAID,MAAM,GAAG,IAAI,GAAG;MAAM,GAD3E,GAAEF,MAAO,KAAIE,MAAO,EAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE5B,CACA;IAAC,GANoBP,MAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAO3B,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACC,EAAA,GAfuBjB,KAAK;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}