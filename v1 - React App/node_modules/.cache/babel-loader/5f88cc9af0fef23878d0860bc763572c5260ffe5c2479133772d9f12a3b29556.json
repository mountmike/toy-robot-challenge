{"ast":null,"code":"var _jsxFileName = \"/Users/michaeltharratt/repos/toy-robot-challenge/src/components/Controls.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Controls(_ref) {\n  _s();\n  let {\n    init,\n    grid,\n    robot,\n    setRobot\n  } = _ref;\n  const [report, setReport] = useState(null);\n  const move = () => {\n    if (!robot) {\n      setReport(\"Please place robot on grid to move!\");\n      return;\n    }\n    if (robot.facing == \"North\") {\n      if (robot.row > 3) {\n        setReport(\"Uh oh, I don't want to fall off the table top!\");\n        return;\n      }\n      setRobot({\n        ...robot,\n        row: robot.row + 1\n      });\n    } else if (robot.facing == \"East\") {\n      if (robot.col > 3) {\n        setReport(\"Uh oh, I don't want to fall off the table top!\");\n        return;\n      }\n      setRobot({\n        ...robot,\n        col: robot.col + 1\n      });\n    } else if (robot.facing == \"South\") {\n      setRobot({\n        ...robot,\n        row: robot.row - 1\n      });\n    } else if (robot.facing == \"West\") {\n      setRobot({\n        ...robot,\n        col: robot.col - 1\n      });\n    }\n  };\n  const handleRotate = e => {\n    if (!robot) {\n      setReport(\"Please place robot on grid before rotating!\");\n      return;\n    }\n    const compass = [\"North\", \"East\", \"South\", \"West\"];\n    let currentIndex = compass.indexOf(robot.facing);\n    if (e.target.value == \"clockwise\") {\n      let newDirection = currentIndex === compass.length - 1 ? compass[0] : compass[currentIndex + 1];\n      setRobot({\n        ...robot,\n        facing: newDirection\n      });\n    } else if (e.target.value == \"antiClockwise\") {\n      let newDirection = currentIndex === 0 ? compass[3] : compass[currentIndex - 1];\n      setRobot({\n        ...robot,\n        facing: newDirection\n      });\n    }\n  };\n  const getReport = () => {\n    if (!robot) {\n      setReport(\"Please place robot on grid to see report!\");\n      return;\n    }\n    setReport(`The robot is at row ${robot.row} & column ${robot.col} and is facing ${robot.facing}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: init,\n      children: \"place robot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: move,\n      children: \"move\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRotate,\n      value: \"clockwise\",\n      children: \"rotate right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRotate,\n      value: \"antiClockwise\",\n      children: \"rotate left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getReport,\n      children: \"report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"report-output\",\n      children: report\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Controls, \"9sXrEVMqNEWLjicNer4dTim2g1U=\");\n_c = Controls;\nvar _c;\n$RefreshReg$(_c, \"Controls\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Controls","_ref","_s","init","grid","robot","setRobot","report","setReport","move","facing","row","col","handleRotate","e","compass","currentIndex","indexOf","target","value","newDirection","length","getReport","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaeltharratt/repos/toy-robot-challenge/src/components/Controls.jsx"],"sourcesContent":["import { useState } from \"react\"\n\nexport default function Controls({ init, grid, robot, setRobot }) {\n  const [report, setReport] = useState(null)\n\n  const move = () => {\n    if (!robot) {\n      setReport(\"Please place robot on grid to move!\")\n      return\n    }\n\n    if (robot.facing == \"North\") {\n      if (robot.row > 3) {\n        setReport(\"Uh oh, I don't want to fall off the table top!\")\n        return\n      }\n      setRobot({ ...robot, row: robot.row + 1})\n    } else if (robot.facing == \"East\") {\n      if (robot.col > 3) {\n        setReport(\"Uh oh, I don't want to fall off the table top!\")\n        return\n      }\n      setRobot({ ...robot, col: robot.col + 1})\n    } else if (robot.facing == \"South\") {\n      setRobot({ ...robot, row: robot.row - 1})\n    } else if (robot.facing == \"West\") {\n      setRobot({ ...robot, col: robot.col - 1})\n    }\n  }\n\n  const handleRotate = (e) => {\n    if (!robot) {\n      setReport(\"Please place robot on grid before rotating!\")\n      return\n    }\n    \n    const compass = [\"North\", \"East\", \"South\", \"West\"]\n    let currentIndex = compass.indexOf(robot.facing)\n\n    if (e.target.value == \"clockwise\") {\n      let newDirection = currentIndex === compass.length -1 ? compass[0] : compass[currentIndex + 1]\n      setRobot({...robot, facing: newDirection})\n    } else if (e.target.value == \"antiClockwise\") {\n      let newDirection = currentIndex === 0 ? compass[3] : compass[currentIndex - 1]\n      setRobot({...robot, facing: newDirection})\n    }\n  }\n\n  const getReport = () => {\n    if (!robot) {\n      setReport(\"Please place robot on grid to see report!\")\n      return\n    }\n    setReport(`The robot is at row ${robot.row} & column ${robot.col} and is facing ${robot.facing}`)\n  }\n\n  return (\n    <div className=\"Controls\">\n      <button onClick={init}>place robot</button>\n      <button onClick={move}>move</button>\n      <button onClick={handleRotate} value={\"clockwise\"}>rotate right</button>\n      <button onClick={handleRotate} value={\"antiClockwise\"}>rotate left</button>\n      <button onClick={getReport}>report</button>\n\n      <p className=\"report-output\">\n        {report}\n      </p>\n\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}